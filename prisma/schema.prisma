generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model car_categories {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  image      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model cars {
  id               Int       @id @default(autoincrement())
  car_name         String    @db.VarChar(100)
  car_category     Int
  driver_id        Int
  car_year         Int       @db.UnsignedInt
  price            Int?      @db.UnsignedInt
  active_status    String?   @db.VarChar(100)
  available_status String?   @db.VarChar(100)
  description      String?   @db.Text
  feature          String?   @db.VarChar(255)
  extra_charge     String?   @db.VarChar(255)
  police_number    String    @db.VarChar(10)
  car_status       String    @db.VarChar(100)
  car_image        String    @db.VarChar(255)
  delete_at        DateTime? @db.Timestamp(0)
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
}

model customers {
  id                    Int                @id @default(autoincrement())
  profile_picture       String?            @db.VarChar(255)
  first_name            String             @db.VarChar(100)
  middle_name           String?            @db.VarChar(100)
  last_name             String?            @db.VarChar(100)
  email_customer        String             @unique(map: "customers_email_customer_unique") @db.VarChar(100)
  password_customer     String             @unique(map: "customers_password_customer_unique") @db.VarChar(100)
  emergency_contact     String?            @db.VarChar(100)
  official_identify     String?            @db.VarChar(255)
  phone_number          String?            @db.VarChar(100)
  country_customer      String?            @db.VarChar(100)
  state_customer        String?            @db.VarChar(100)
  address               String?            @db.Text
  driver_license_number Int?
  driver_license_image  String?            @db.VarChar(255)
  expiration_date       DateTime?          @db.Date
  date_of_birth         DateTime?          @db.Date
  status                String             @db.VarChar(100)
  driver_goals          driver_goals[]
  car_availability      car_availability[]
  delete_at             DateTime?          @db.Timestamp(0)
  created_at            DateTime?          @db.Timestamp(0)
  updated_at            DateTime?          @db.Timestamp(0)
}

model car_availability {
  id                        Int                    @id @default(autoincrement())
  primary_financial_goal    primary_financial_goal @relation(fields: [primary_financial_goal_id], references: [id])
  primary_financial_goal_id Int
  how_often_family          how_often_family       @relation(fields: [how_often_family_id], references: [id])
  how_often_family_id       Int
  how_often_car             how_often_car          @relation(fields: [how_often_car_id], references: [id])
  how_often_car_id          Int
  createdAt                 DateTime               @default(now())
  updatedAt                 DateTime               @updatedAt
  customers                 customers              @relation(fields: [customer_id], references: [id])
  customer_id               Int
}

model primary_financial_goal {
  id                     Int                @id @default(autoincrement())
  primary_financial_goal String
  createdAt              DateTime           @default(now())
  updatedAt              DateTime           @updatedAt
  car_availability       car_availability[]
}

model how_often_family {
  id               Int                @id @default(autoincrement())
  how_often_family String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  car_availability car_availability[]
}

model how_often_car {
  id               Int                @id @default(autoincrement())
  how_often_car    String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  car_availability car_availability[]
}

model driver_goals {
  id                  Int              @id @default(autoincrement())
  advance_goal        advance_goal     @relation(fields: [advance_goal_id], references: [id])
  advance_goal_id     Int
  minimum_duration    minimum_duration @relation(fields: [minimum_duration_id], references: [id])
  minimum_duration_id Int
  maximum_duration    maximum_duration @relation(fields: [maximum_duration_id], references: [id])
  maximum_duration_id Int
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  customers           customers        @relation(fields: [customer_id], references: [id])
  customer_id         Int
}

model advance_goal {
  id           Int            @id @default(autoincrement())
  advance_goal String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  driver_goals driver_goals[]
}

model minimum_duration {
  id               Int            @id @default(autoincrement())
  minimum_duration String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  driver_goals     driver_goals[]
}

model maximum_duration {
  id               Int            @id @default(autoincrement())
  maximum_duration String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  driver_goals     driver_goals[]
}

model destination {
  id                      Int       @id @default(autoincrement())
  destination_name        String    @db.VarChar(100)
  destination_icon        String    @db.VarChar(255)
  destination_headline    String    @db.VarChar(255)
  destination_description String    @db.LongText
  delete_at               DateTime? @db.Timestamp(0)
  created_at              DateTime? @db.Timestamp(0)
  updated_at              DateTime? @db.Timestamp(0)
}

model destination_abouts {
  id                            Int       @id @default(autoincrement())
  destination_id                Int
  destination_about_title       String    @db.VarChar(100)
  destination_about_description String    @db.LongText
  delete_at                     DateTime? @db.Timestamp(0)
  created_at                    DateTime? @db.Timestamp(0)
  updated_at                    DateTime? @db.Timestamp(0)
}

model destination_contents {
  id                              Int       @id @default(autoincrement())
  destination_id                  Int
  destination_content_title       String    @db.VarChar(100)
  destination_content_image       String    @db.VarChar(255)
  destination_content_description String    @db.LongText
  delete_at                       DateTime? @db.Timestamp(0)
  created_at                      DateTime? @db.Timestamp(0)
  updated_at                      DateTime? @db.Timestamp(0)
}

model extra_charges {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  price       Int
  information String    @db.Text
  delete_at   DateTime? @db.Timestamp(0)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model failed_jobs {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model features {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  information String    @db.Text
  delete_at   DateTime? @db.Timestamp(0)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model password_resets {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}

model personal_access_tokens {
  id             Int       @id @default(autoincrement())
  tokenable_type String    @db.VarChar(255)
  tokenable_id   Int
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model taxes {
  id         Int       @id @default(autoincrement())
  tax_value  String    @db.VarChar(100)
  delete_at  DateTime? @db.Timestamp(0)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model users {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  password          String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}
